/* 
    Partie où l'on va créer des variables,
    elles seront utilisable avec l'appel de la fonction "var(nom_de_la_fonction)"
*/
:root{
    --background-color: rgb(40, 40, 40);
    --text-menu-color: white;
    --gradient-color: rgb(255, 255, 255, 0.2);

    --bg-size : 12vmin;

    /* 
        Différents gradients à utiliser selon l'envie !

        NB : radial-gradient(shape size at position, start-color, ..., last-color)
            shape : elipse(default) or circle
            size : Xsize Ysize in %, we can go past 100%
            at position : dans le carré où se trouve le motif
        
        Lorsque l'on va vouloir réaliser des modèles plus complexes on va déplacer un gradient
    */

    /* 
        Gradient cadrillage de points,
        Besoin de set background-position à 0 0 

        Explication de ce gradient !
        
    */
    --gradient-point: 
        radial-gradient(50% 50% at 25% 25%, var(--gradient-color) 0% 9%, transparent 10%),
        radial-gradient(50% 50% at 75% 75%,  var(--gradient-color) 0% 9%, transparent 10%);

    /* 
        Gradient vagues formées par des ronds,
        beosin de mettre background-position = calc(var(--bg-size)/2) 0

        Utilisation de  pourcentage !
            ->> Résolution de tous le sproblèmes!

            "%" -> Relative to the parent Element !
            Elle sera relative à l'élément parent, soit à la taille du background ici, donc, transition douce !
    */
    --gradient-vague: 
        radial-gradient(50% 50% at 50% 0%,  var(--gradient-color) 99%, transparent 100%),
        radial-gradient(50% 50% at 50% 100%,  var(--gradient-color) 99%, transparent 100%);

    --gradient-trefle-colors: var(--gradient-color) 98%, transparent 99%;

    --gradient-trefle:
        radial-gradient(closest-corner at 20% 20%,var(--gradient-trefle-colors)),
        radial-gradient(closest-corner at 80% 20%,var(--gradient-trefle-colors)),
        radial-gradient(closest-corner at 20% 80%,var(--gradient-trefle-colors)),
        radial-gradient(closest-corner at 80% 80%,var(--gradient-trefle-colors));


    /* 
        On essaie de laisser à vide le milieu et ne donner la couleur qu'à l'extérieur
    */
    --gradient-trefle-inverse-colors: var(--gradient-color) 100%, transparent 101%;

    --gradient-trefle-inverse:
        radial-gradient(closest-corner at 20% 20%,var(--gradient-trefle-inverse-colors)),
        radial-gradient(closest-corner at 80% 20%,var(--gradient-trefle-inverse-colors)),
        radial-gradient(closest-corner at 20% 80%,var(--gradient-trefle-inverse-colors)),
        radial-gradient(closest-corner at 80% 80%,var(--gradient-trefle-inverse-colors));


    /* 
        left : 0% 50%
        right : 100% 50%
    */
    --gradient-half-circle:
        radial-gradient(50% 50% at left ,transparent 70%,var(--gradient-color) 71% 80%,transparent 81%),
        radial-gradient(50% 50% at right,var(--gradient-color) 0 80%,transparent 81%);

    /* 
        transparent : #0000
        besoin de définir l'emplacement d'un des deux à la moitiée de la largeur et de longeur de la taille du fonc d'ecran (soit --bg-size)
    */
    --gradient-wall-paper:
        radial-gradient(10% 10%, var(--background-color) 98%, transparent),
        radial-gradient(54% 54%,transparent 98%,var(--gradient-color));
    
    --gradient-repeat-circle:
        repeating-radial-gradient(transparent 0% 12%,var(--gradient-color) 13% 26%);
    
    
    --gradient-heart:
        radial-gradient(closest-corner at 20% 80%, var(--gradient-color) 0% 98%, transparent 99%),
        radial-gradient(closest-corner at 80% 80%, var(--gradient-color) 0% 98%, transparent 99%),
        linear-gradient(227deg, var(--gradient-color) 0% 20%, transparent 21%),
        linear-gradient(133deg, var(--gradient-color) 0% 20%, transparent 21%);
}

/* 
    Import de la police provenant de : https://fonts.google.com/specimen/Shantell+Sans?preview.size=38
*/
@import url('https://fonts.googleapis.com/css2?family=Bodoni+Moda&display=swap');



body{
    background-color: var(--background-color);

    /* extérieur */
    margin:0px;
}

#menu{
    /* 
        On définit la div menu comme prenant 100% de la hauteur du "viewport"

        Viewport : la partie visible par l'utilisateur d'une page web
    */
    height: 100vh;
    width: 100vw;

    /* 
        Façon d'affichage d'un élément, ici en block-level flex container
    */
    display: flex;
    align-items: center;
}

.menu-item{
    color: var(--text-menu-color);

    /* 
        clamp(valeur minimum, valeur préférée, valeur maximum)
    
        Une fonction qui pour les "font-size" permet de créer une taille de police
            qui s'ajuste avec la taille de l'écran SANS utiliser de mediaquerries @media
    */
    font-size: clamp(3rem, 8vw, 5rem);
    font-family: 'Bodoni Moda', serif;
    /*
        Affichage non plus en ligne mais en colonne
    */
    display: block;
    text-decoration: none;

    /* interieur */
    padding: clamp(0.25rem, 0.5vw, 1rem) 0rem;

    /* 
        Quand il y aura une transition, les effets décrits ici viendront doucement et/ou avec délai
    */
    transition: opacity 600ms ease;
}

#menu-items{
    /* 
        Passera d'un minimum de 4rem à un maximum de 48rem de marge, avec une valeur préférée de 20vw
    */
    margin-left: clamp(4rem, 20vw, 48rem);

    /* 
        Positionner de maniere relative, avec des marges par rapport à sa position normale
        et il sera impossible pour d'autres éléments de prendre la place restante
    */
    position: relative;

    /*  
        z-index définit la position sur une pile d'un élément,
        Un index plus grand qu'un autre signifie que cet élément sera placer devant l'autre,
        inversement, un élément avec un index plus petit sera afficher derrière l'autre

        "z" pour la profondeur, "x" l'axe horizontal et "y" l'axe vertical.
    */
    z-index: 2;
}

/* 
    Cette ligne signifie qu'une fois que l'on passera la souris sur l'élément avec l'id="menu-items"
    alors on ira chercher les éléments d'id="menu-item" et on règlera leur opacitée,
    à noter : le chevron > indique que l'action n'affectera que les éléments directemment descendant de l'élément précédent
    exemple : ici on affectera les éléments id="menu-item" qui sont les enfants direct de l'élément d'id="menu-items"

    à noter que l'élément " "(espace) signifie tout élément descendant du premier élément,
    descendant premier comme lointain
*/
#menu-items:hover > .menu-item{
    opacity: 0.3;
}

/* 
    une fois qu'on est sur le menu, l'opacité de l'élément du menu sur lequel nous somme sera remis à 1
*/
#menu-items:hover > .menu-item:hover{
    opacity: 1;
}

/* 
    Pour l'animation de haut en bas suivant sur quel élément du menu nous somme
*/
/* 
***** ! Attribute selector ! *****
    #menu[data-active-index="0"]
        L'élément du dataset du menu dont l'index dans le dataset = "0"
    > #menu-background-pattern
        On affectera les éléments directement descendant de "menu" et on leur appliquera les effets suivants "{...}"
*/
#menu[data-active-index="0"] > #menu-background-pattern {
    background-position: 0% 0%, 0% 0%;
}
#menu[data-active-index="1"] > #menu-background-pattern {
    background-position: 0% -15%, 0% -0%;
}
#menu[data-active-index="2"] > #menu-background-pattern {
    background-position: 0% -15%, 0% -15%;
}
#menu[data-active-index="3"] > #menu-background-pattern {
    background-position: 0% -30%, 0% -15%;
}

#menu[data-active-index="0"] > #menu-background-image {
    background-position: center 45%;
}

#menu[data-active-index="1"] > #menu-background-image {
    background-position: center 50%;
}

#menu[data-active-index="2"] > #menu-background-image {
    background-position: center 55%;
}

#menu[data-active-index="3"] > #menu-background-image {
    background-position: center 60%;
}

#menu-background-pattern{
    /* 
        Bien mettre la hauteur en "vh" pour "view-height" et la largeur en "vw" pour "view-width"
    */
    height: 100vh;
    width: 100vw;

    /* 
        Rajout d'une image de fond dans la div qui contient les items du menu

        radial-gradient(
            la couleur rgb(R,G,B,opacité) de où à où le gradiant reste de cette même couleur, priorité d'affichage
            La seconde couleur (ici la couleur transparente) suivie de où à où le gradient restera de cette même couleur
            (si un seul % de rentré, alors il n'y aura qu'un dégradé et pas de "section" ou la couleur est conservée !)
    */
    /* 
        background-image: radial-gradient(shape size at position, start-color, ..., last-color);

        **********************************************************************************************************************************************************
        A faire:
            Pouvoir choisir entre tous les différents fond d'ecran possible, et mettre les boutons "fond d'ecran suivant" "fond d'ecran precedent" pour le changer
                + Utilisation de JS pour le faire
            Faire de même à un autre endroit en n'utilisant que le CSS
                + Utilisation d'indexs pour mettre en premier plan les fonds d'ecran et les afficher ?
        **********************************************************************************************************************************************************
    */

    background: var(--gradient-point);
    
    /* Ici on met la position de l'arrière plan à 0 par rapport à l'élément parent */
    background-position: 0% 0%, 0% 0%;

    /* Pour le gradient vague */
    /* background-position: 0% 0%, calc(var(--bg-size)/2) 0vmin; */

    /* Pour le gradient wall-paper */
    /* background-position: 0% 0%, calc(var(--bg-size)/2) calc(var(--bg-size)/2); */

    /* 
        Ici on met la taille de l'arrière plan à 12% (car la variable --bg-size est initialement à 12vmin) de la taille minimale du "viewport"
    */
    background-size: var(--bg-size) var(--bg-size);

    position:absolute;
    /* 
        Le fond d'ecran sera fixée avec un espace de 0 pixel vers la gauche et le haut, soit pas d'espace
    */
    left: 0px;
    top: 0px;

    /* 
        Position à 1 en profondeur
    */
    z-index: -1;

    /* 
        Lors de la transition,
        on prendra "x" temps avec le mode "ease"
    */

    transition: 
        opacity 800ms ease,
        background 800ms ease;
}

/* 
    Pour effectuer une transition douce dans la taille du gradient,
    le gradient s'adapte immediatement, on va donc jouer sur l'opacité avec l'élément "before"

    "ne fonctionne actuellement pas,  REVOIR l'Utilisation de before ! **********************************************

    Mais problème résolu ! voir dans le root la déclaration du radial en % et non pluis sur une variable
    -> utilisation de l'élément parent !
*/
/* #menu-background-pattern::before{
    --bg-size: 11vmin;
    height: 100vh;
    width: 100vw;
    position: absolute;
    left: 0px;
    top: 0px;
    background: var(--gradient-vague);
    transition: opacity 800ms ease;
    z-index: -1;
    opacity: 0;
}

#menu-items:hover ~ #menu-background-pattern:hover::before{
    opacity: 1;
} */

/* 
    On diminue la taille du fond d'ecran contenu dans cette div ainsi que son opacité

    "~" signifie ceux qui sont les frères et ceux qui suivent le premère élément

    Dans la partie .html, on remarquera que la div #menu-background-pattern suit bien la div #menu-items
*/
#menu-items:hover ~ #menu-background-pattern {
    /* 
        Tous les éléments contenant cette variable s'adapte directement
        Mais PAS les éléments dans le ROOT !

        problème avec le gradient, il s'adapte directement, et non pas tranquillement : normal,
            A voir avec l'élément before pour le prochain exo.
    */
    --bg-size: 11vmin;
    opacity: 0.5;
}


#menu-background-image {
    background-image: url("images/energy_men_power.jpg");
    
    background-position: center 40%;
    background-size: 110vmax;

    position: absolute;
    top: 0px;
    left: 0px;

    height: 100%;
    width: 100%;
    
    z-index: 0;

    opacity: 0.15;

    transition: opacity 800ms ease,
        background-size 800ms ease,
        background-position 800ms ease;
  }

#menu-items:hover ~ #menu-background-image {
    background-size: 100vmax;
    opacity: 0.1;
}